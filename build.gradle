plugins {
    id 'java'
    id 'maven-publish'
}

group 'org.zeith'

repositories {
    mavenCentral()
    maven {
        name = "Zeitheron Maven"
        url = "https://maven.zeith.org"
    }
}

dependencies {
    implementation "org.zeith.libs:TupleLib:$tuple_lib"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

tasks.register('shadedJar', Jar) {
    manifest.from jar.manifest
    classifier = 'shaded'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

tasks.register('srcJar', Jar) {
    dependsOn classes
    from sourceSets.main.allSource
    classifier = 'sources'
}

tasks.register('javadocJar', Jar) {
    dependsOn classes
    from javadoc
    classifier = 'javadoc'
}

artifacts {
    archives shadedJar
    archives srcJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.zeith.libs'
            artifactId = 'Configured'
            from components.java

            pom {
                name = 'Configured'
                description = 'Configuration library.'
                dependencies {
                    implementation "org.zeith.libs:TupleLib:$tuple_lib"
                }
            }

            artifact srcJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url System.env.MAVEN_URL
        }
    }
}